
% RUNDEMO Illustrates the use of BFILTER2 and CARTOON.
%    This demo shows typical usage for the bilateral 
%    filter implemented by BFILTER2. The application
%    of bilateral filtering to image abstraction is
%    demonstrated by the CARTOON function.
%
% Douglas R. Lanman, Brown University, September 2006.
% dlanman@brown.edu, http://mesh.brown.edu/dlanman


% Load test images.
% Note: Must be double precision in the interval [0,1].
img1 = double(imread('Mango_08_A.JPG'))/255;
img2 = double(imread('Mango_10_A.JPG'))/255;
img3 = double(imread('Mango_13_B.JPG'))/255;

% Introduce AWGN into test images.
% Note: This will show the benefit of bilateral filtering.
img1 = img1+0.03*randn(size(img1));
img2 = img2+0.03*randn(size(img2));
img1(img1<0) = 0; img1(img1>1) = 1;
img2(img2<0) = 0; img2(img2>1) = 1;

% Set bilateral filter parameters.
w     = 5;       % bilateral filter half-width
sigma = [3 0.1]; % bilateral filter standard deviations

% Apply bilateral filter to each image.
bflt_img1 = bfilter2(img1,w,sigma);
bflt_img2 = bfilter2(img2,w,sigma);

% % Display grayscale input image and filtered output.
% figure(1); clf;
% set(gcf,'Name','Grayscale Bilateral Filtering Results');
% subplot(1,2,1); imagesc(img1);
% axis image; colormap gray;
% title('Input Image');
% subplot(1,2,2); imagesc(bflt_img1);
% axis image; colormap gray;
% title('Result of Bilateral Filtering');

% Display color input image and filtered output.
% figure(2); clf;
% set(gcf,'Name','Color Bilateral Filtering Results');
% subplot(1,2,1); imshow(img2);
% axis image;
% title('Input Image');
% subplot(1,2,2); imshow(bflt_img2);
% axis image; title('Result of Bilateral Filtering');
% drawnow;

% % Apply bilateral filter for a "cartoon" effect.
% cartoon_img3 = cartoon(img3);

% % Display color input image and abstracted output.
% figure(3); clf;
% set(gcf,'Name','Image Abstraction Input');
% imagesc(img3); axis image;
% title('Input Image');
% figure(4); clf;
% set(gcf,'Name','Result of Image Abstraction');
% imagesc(cartoon_img3); axis image;
% title('Abstracted Image');

img = rgb2gray(bflt_img2);
imga = im2bw(img,0.22);
% figure(4); clf;
% set(gcf,'Name','Result of changing to bw');
% imshow(imga); axis image;
% title('blackwhite');

filled_img2=imfill(imga,'holes');
% figure(5); clf;
% set(gcf,'Name','Result of GrayScale from Image Abstraction');
% imshow(filled_img2); axis image;
% title('filled_img');

rm_white_spots_img2=bwareafilt(filled_img2,[50 50000000000]);
figure(6); clf;
set(gcf,'Name','Result of Removing White Spots');
imshow(rm_white_spots_img2); axis image;
title('removed_white_spots');

BW = edge(rm_white_spots_img2);
imshow(BW);
Orientations = skeletonOrientation(BW,5); %5x5 box
Onormal = Orientations+90; %easier to view normals
Onr = sind(Onormal); %vv
Onc = cosd(Onormal); %uu
[r,c] = find(BW);    %row/cols
idx = find(BW);      %Linear indices into Onr/Onc
figure(7); imshow(BW,[]);
%Overlay normals to verify
hold on
quiver(c,r,-Onc(idx),Onr(idx));
A = Orientations


%find angle of the hairs

